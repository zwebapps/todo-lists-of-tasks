{
  "version": 3,
  "sources": ["../../../../../../node_modules/deepmerge/dist/cjs.js", "../../../../../../node_modules/ngrx-store-localstorage/fesm2022/ngrx-store-localstorage.mjs"],
  "sourcesContent": ["'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n  return isNonNullObject(value) && !isSpecial(value);\n};\nfunction isNonNullObject(value) {\n  return !!value && typeof value === 'object';\n}\nfunction isSpecial(value) {\n  var stringValue = Object.prototype.toString.call(value);\n  return stringValue === '[object RegExp]' || stringValue === '[object Date]' || isReactElement(value);\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\nfunction isReactElement(value) {\n  return value.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction emptyTarget(val) {\n  return Array.isArray(val) ? [] : {};\n}\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n  return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;\n}\nfunction defaultArrayMerge(target, source, options) {\n  return target.concat(source).map(function (element) {\n    return cloneUnlessOtherwiseSpecified(element, options);\n  });\n}\nfunction getMergeFunction(key, options) {\n  if (!options.customMerge) {\n    return deepmerge;\n  }\n  var customMerge = options.customMerge(key);\n  return typeof customMerge === 'function' ? customMerge : deepmerge;\n}\nfunction getEnumerableOwnPropertySymbols(target) {\n  return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function (symbol) {\n    return Object.propertyIsEnumerable.call(target, symbol);\n  }) : [];\n}\nfunction getKeys(target) {\n  return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));\n}\nfunction propertyIsOnObject(object, property) {\n  try {\n    return property in object;\n  } catch (_) {\n    return false;\n  }\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n  return propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n  && !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n  && Object.propertyIsEnumerable.call(target, key)); // and also unsafe if they're nonenumerable.\n}\nfunction mergeObject(target, source, options) {\n  var destination = {};\n  if (options.isMergeableObject(target)) {\n    getKeys(target).forEach(function (key) {\n      destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n    });\n  }\n  getKeys(source).forEach(function (key) {\n    if (propertyIsUnsafe(target, key)) {\n      return;\n    }\n    if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n      destination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n    } else {\n      destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n    }\n  });\n  return destination;\n}\nfunction deepmerge(target, source, options) {\n  options = options || {};\n  options.arrayMerge = options.arrayMerge || defaultArrayMerge;\n  options.isMergeableObject = options.isMergeableObject || isMergeableObject;\n  // cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n  // implementations can use it. The caller may not replace it.\n  options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n  var sourceIsArray = Array.isArray(source);\n  var targetIsArray = Array.isArray(target);\n  var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n  if (!sourceAndTargetTypesMatch) {\n    return cloneUnlessOtherwiseSpecified(source, options);\n  } else if (sourceIsArray) {\n    return options.arrayMerge(target, source, options);\n  } else {\n    return mergeObject(target, source, options);\n  }\n}\ndeepmerge.all = function deepmergeAll(array, options) {\n  if (!Array.isArray(array)) {\n    throw new Error('first argument should be an array');\n  }\n  return array.reduce(function (prev, next) {\n    return deepmerge(prev, next, options);\n  }, {});\n};\nvar deepmerge_1 = deepmerge;\nmodule.exports = deepmerge_1;", "import deepmerge from 'deepmerge';\n\n// Cannot import from the @ngrx/store package due to a module resolution issue.\n// See Issue #206.\nconst INIT_ACTION = '@ngrx/store/init';\nconst UPDATE_ACTION = '@ngrx/store/update-reducers';\nconst detectDate = /(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})/;\n// correctly parse dates from local storage\nconst dateReviver = (_key, value) => {\n  if (typeof value === 'string' && detectDate.test(value)) {\n    return new Date(value);\n  }\n  return value;\n};\nconst dummyReviver = (_key, value) => value;\nconst checkIsBrowserEnv = () => {\n  return typeof window !== 'undefined';\n};\nconst validateStateKeys = keys => {\n  return keys.map(key => {\n    let attr = key;\n    if (typeof key === 'object') {\n      attr = Object.keys(key)[0];\n    }\n    if (typeof attr !== 'string') {\n      throw new TypeError(`localStorageSync Unknown Parameter Type: ` + `Expected type of string, got ${typeof attr}`);\n    }\n    return key;\n  });\n};\nconst rehydrateApplicationState = (keys, storage, storageKeySerializer, restoreDates) => {\n  return keys.reduce((acc, curr) => {\n    let key = curr;\n    let reviver = restoreDates ? dateReviver : dummyReviver;\n    let deserialize;\n    let decrypt;\n    if (typeof key === 'object') {\n      key = Object.keys(key)[0];\n      // use the custom reviver function\n      if (typeof curr[key] === 'function') {\n        reviver = curr[key];\n      } else {\n        // use custom reviver function if available\n        if (curr[key].reviver) {\n          reviver = curr[key].reviver;\n        }\n        // use custom serialize function if available\n        if (curr[key].deserialize) {\n          deserialize = curr[key].deserialize;\n        }\n      }\n      // Ensure that encrypt and decrypt functions are both present\n      if (curr[key].encrypt && curr[key].decrypt) {\n        if (typeof curr[key].encrypt === 'function' && typeof curr[key].decrypt === 'function') {\n          decrypt = curr[key].decrypt;\n        } else {\n          console.error(`Either encrypt or decrypt is not a function on '${curr[key]}' key object.`);\n        }\n      } else if (curr[key].encrypt || curr[key].decrypt) {\n        // Let know that one of the encryption functions is not provided\n        console.error(`Either encrypt or decrypt function is not present on '${curr[key]}' key object.`);\n      }\n    }\n    if (storage !== undefined) {\n      let stateSlice = storage.getItem(storageKeySerializer(key));\n      if (stateSlice) {\n        // Use provided decrypt function\n        if (decrypt) {\n          stateSlice = decrypt(stateSlice);\n        }\n        const isObjectRegex = new RegExp('{|\\\\[');\n        let raw = stateSlice;\n        if (stateSlice === 'null' || stateSlice === 'true' || stateSlice === 'false' || isObjectRegex.test(stateSlice.charAt(0))) {\n          raw = JSON.parse(stateSlice, reviver);\n        }\n        return Object.assign({}, acc, {\n          [key]: deserialize ? deserialize(raw) : raw\n        });\n      }\n    }\n    return acc;\n  }, {});\n};\n// Recursively traverse all properties of the existing slice as defined by the `filter` argument,\n// and output the new object with extraneous properties removed.\nfunction createStateSlice(existingSlice, filter) {\n  return filter.reduce((memo, attr) => {\n    if (typeof attr === 'string' || typeof attr === 'number') {\n      const value = existingSlice?.[attr];\n      if (value !== undefined) {\n        memo[attr] = value;\n      }\n    } else {\n      for (const key in attr) {\n        if (Object.prototype.hasOwnProperty.call(attr, key)) {\n          const element = attr[key];\n          memo[key] = createStateSlice(existingSlice[key], element);\n        }\n      }\n    }\n    return memo;\n  }, {});\n}\nconst syncStateUpdate = (state, keys, storage, storageKeySerializer, removeOnUndefined, syncCondition) => {\n  if (syncCondition) {\n    try {\n      if (syncCondition(state) !== true) {\n        return;\n      }\n    } catch (e) {\n      // Treat TypeError as do not sync\n      if (e instanceof TypeError) {\n        return;\n      }\n      throw e;\n    }\n  }\n  keys.forEach(key => {\n    let stateSlice = state[key];\n    let replacer;\n    let space;\n    let encrypt;\n    if (typeof key === 'object') {\n      let name = Object.keys(key)[0];\n      stateSlice = state[name];\n      if (typeof stateSlice !== 'undefined' && key[name]) {\n        // use serialize function if specified.\n        if (key[name].serialize) {\n          stateSlice = key[name].serialize(stateSlice);\n        } else {\n          // if serialize function is not specified filter on fields if an array has been provided.\n          let filter;\n          if (key[name].reduce) {\n            filter = key[name];\n          } else if (key[name].filter) {\n            filter = key[name].filter;\n          }\n          if (filter) {\n            stateSlice = createStateSlice(stateSlice, filter);\n          }\n          // Check if encrypt and decrypt are present, also checked at this#rehydrateApplicationState()\n          if (key[name].encrypt && key[name].decrypt) {\n            if (typeof key[name].encrypt === 'function') {\n              encrypt = key[name].encrypt;\n            }\n          } else if (key[name].encrypt || key[name].decrypt) {\n            // If one of those is not present, then let know that one is missing\n            console.error(`Either encrypt or decrypt function is not present on '${key[name]}' key object.`);\n          }\n        }\n        /*\n        Replacer and space arguments to pass to JSON.stringify.\n        If these fields don't exist, undefined will be passed.\n        */\n        replacer = key[name].replacer;\n        space = key[name].space;\n      }\n      key = name;\n    }\n    if (typeof stateSlice !== 'undefined' && storage !== undefined) {\n      try {\n        if (encrypt) {\n          // ensure that a string message is passed\n          stateSlice = encrypt(typeof stateSlice === 'string' ? stateSlice : JSON.stringify(stateSlice, replacer, space));\n        }\n        storage.setItem(storageKeySerializer(key), typeof stateSlice === 'string' ? stateSlice : JSON.stringify(stateSlice, replacer, space));\n      } catch (e) {\n        console.warn('Unable to save state to localStorage:', e);\n      }\n    } else if (typeof stateSlice === 'undefined' && removeOnUndefined && storage !== undefined) {\n      try {\n        storage.removeItem(storageKeySerializer(key));\n      } catch (e) {\n        console.warn(`Exception on removing/cleaning undefined '${key}' state`, e);\n      }\n    }\n  });\n};\n// Default merge strategy is a full deep merge.\nconst defaultMergeReducer = (state, rehydratedState, action) => {\n  if ((action.type === INIT_ACTION || action.type === UPDATE_ACTION) && rehydratedState) {\n    const overwriteMerge = (destinationArray, sourceArray, options) => sourceArray;\n    const options = {\n      arrayMerge: overwriteMerge\n    };\n    state = deepmerge(state, rehydratedState, options);\n  }\n  return state;\n};\nconst localStorageSync = config => reducer => {\n  if (config.storage === undefined && !config.checkStorageAvailability || config.checkStorageAvailability && checkIsBrowserEnv()) {\n    config.storage = localStorage || window.localStorage;\n  }\n  if (config.storageKeySerializer === undefined) {\n    config.storageKeySerializer = key => key;\n  }\n  if (config.restoreDates === undefined) {\n    config.restoreDates = true;\n  }\n  // Use default merge reducer.\n  let mergeReducer = config.mergeReducer;\n  if (mergeReducer === undefined || typeof mergeReducer !== 'function') {\n    mergeReducer = defaultMergeReducer;\n  }\n  const stateKeys = validateStateKeys(config.keys);\n  const rehydratedState = config.rehydrate ? rehydrateApplicationState(stateKeys, config.storage, config.storageKeySerializer, config.restoreDates) : undefined;\n  return function (state, action) {\n    let nextState;\n    // If state arrives undefined, we need to let it through the supplied reducer\n    // in order to get a complete state as defined by user\n    if (action.type === INIT_ACTION && !state) {\n      nextState = reducer(state, action);\n    } else {\n      nextState = {\n        ...state\n      };\n    }\n    // Merge the store state with the rehydrated state using\n    // either a user-defined reducer or the default.\n    nextState = mergeReducer(nextState, rehydratedState, action);\n    nextState = reducer(nextState, action);\n    if (action.type !== INIT_ACTION) {\n      syncStateUpdate(nextState, stateKeys, config.storage, config.storageKeySerializer, config.removeOnUndefined, config.syncCondition);\n    }\n    return nextState;\n  };\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { dateReviver, defaultMergeReducer, localStorageSync, rehydrateApplicationState, syncStateUpdate };\n"],
  "mappings": "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",
  "names": ["isMergeableObject", "deepmerge", "options", "deepmerge"]
}
